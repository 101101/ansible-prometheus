#jinja2: trim_blocks: True, lstrip_blocks: True
# http://prometheus.io/docs/operating/configuration/

global:
  scrape_interval: {{ prometheus_global_scrape_interval }} 
  scrape_timeout: {{ prometheus_global_scrape_timeout }}
  evaluation_interval: {{ prometheus_global_evaluation_interval }}

{% if prometheus_global_labels and prometheus_global_labels|count > 0 %}
  # Attach these extra labels to all timeseries collected by this Prometheus instance.
  labels:
  {% for k,v in prometheus_global_labels.iteritems()  %}
    {{ k }}: "{{ v }}"
  {% endfor %}
{% endif %}

  # Load and evaluate rules in this file every 'evaluation_interval' seconds. This field may be repeated.
{% if prometheus_rule_files is defined and prometheus_rule_files|count > 0 %}
rule_files:
  {% for file in prometheus_rule_files %}
  - '{{ file }}'
  {% endfor%}
{% endif %}

scrape_configs:
  - job_name: "prometheus"
    scrape_interval: "5s"
    scheme: http
    metrics_path: /metrics
    static_configs:
      - targets: ['localhost:9090'] 

{% for job in prometheus_target_jobs %}
  - job_name: '{{ job.job_name }}'
  {% if job.scrape_interval | default('') %}
    scrape_interval: {{ job.scrape_interval }}
  {% endif %}
  {% if job.scrape_timeout | default('') %}
    scrape_timeout: {{ job.scrape_timeout }}
  {% endif %}
  {% if job.metrics_path | default('') %}
    metrics_path: '{{job.metrics_path}}'
  {% endif %}
  {% if job.target_groups is defined %}
    target_groups:
      - targets:
    {% for target in job.target_groups.targets  %}
        - "{{ target }}"
    {% endfor %}
        labels:
    {% for k, v in job.target_groups.labels.iteritems() %}
          {{ k }}: {{ v }}
    {% endfor %}
  {% endif %}
{% endfor %}
